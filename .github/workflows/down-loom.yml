name: download loom video
'on':
  workflow_dispatch:
    inputs:
      URL:
        description: YouTube Channel URL
        type: enviroment
        required: true
      downloadVideo:
        description: if download video file
        type: boolean
        required: true
      downloadSubtitles:
        description: if download video subtitles
        type: boolean
        required: true
      downloadComments:
        description: if download video comments
        type: boolean
        required: true
      downloadVideoHeight:
        description: best or low
        type: choice
        required: true
        options:
          - 480
          - 720

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Config git
        run: >
          git config --local user.email "ations@github.com"

          git config --local user.name "github"

          git config --global http.postBuffer 157286400

          git remote set-url origin "https://${{ github.actor }}:${{
          github.token }}@github.com/${{ github.repository }}"
#       - name: Release
#         uses: marvinpinto/action-automatic-releases@latest
#         with:
#           repo_token: '${{ secrets.GITHUB_TOKEN }}'
#           automatic_release_tag: '${{ github.run_id }}'
#           prerelease: false
#           title: '${{ github.run_id }}'
#           files: |
#             output/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./result/*
          asset_name: result.zip
          asset_content_type: application/zip